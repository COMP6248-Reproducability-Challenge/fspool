import matplotlib.pyplot as plt
import numpy as np


data = {
    'sum': [512, 512, 512, 512, 512, 512, 512, 512, 512, 500, 476, 470, 474, 482, 482, 487, 485, 485, 496, 493, 493, 485, 480, 477, 473, 476, 478, 484, 488, 491, 489, 488, 489, 489, 487, 481, 479, 474, 478, 477, 479, 485, 494, 492, 492, 493, 487, 485, 482, 486, 481, 477, 480, 483, 480, 481, 481, 484, 494, 496, 492, 490, 487, 481, 483, 484, 479, 480, 488, 486, 490, 494, 494, 491, 487, 486, 482, 480, 482, 480, 482, 483, 487, 493, 501, 501, 491, 487, 482, 475, 470, 481, 480, 481, 482, 485, 489, 491, 503, 497, 491, 486, 480, 484, 481, 481, 484, 483, 486, 489, 484, 489, 487, 484, 479, 478, 471, 469, 471, 467, 464, 469, 474, 476, 479, 471, 469, 457, 457, 448, 444, 444, 442, 449, 442, 444, 446, 457, 447, 449, 454, 449, 445, 436, 442, 435, 439, 442, 437, 445, 437, 435, 439, 444, 450, 439, 425, 427, 422, 436, 427, 440, 437, 435, 436, 432, 444, 435, 429, 426, 436, 432, 428, 422, 435, 431, 429, 426, 424, 428, 424, 418, 437, 432, 434, 414, 419, 429, 431, 424, 421, 419, 424, 426, 426, 430, 446, 432, 424, 409, 408, 408, 433, 423, 433, 422, 415, 418, 428, 437, 440, 427, 417, 405, 412, 419, 426, 425, 420, 418, 425, 437, 437, 427, 424, 410, 408, 403, 412, 425, 427, 421, 431, 432, 432, 431, 414, 409, 402, 417, 417, 419, 428, 423, 420, 415, 413, 422, 417, 419, 416, 420, 415, 416, 419, 427, 423, 428, 412, 415, 416, 422, 418, 440, 434, 422, 411, 412, 421, 403, 421, 413, 417, 422, 420, 424, 422, 424, 423, 422, 415, 408, 410, 422, 424, 416, 418, 423, 423, 412, 407, 423, 425, 428, 417, 406, 416, 421, 411, 408, 414, 412, 417, 427, 425, 417, 406, 407, 422, 426, 424, 418, 422, 421, 409, 418, 425, 427, 416, 418, 408, 407, 416, 418, 419, 417, 407, 416, 410, 414, 424, 423, 418, 414, 415, 409, 415, 419, 410, 401, 410, 416, 423, 422, 428, 429, 421, 422, 422, 416],
    'rn': [512, 512, 512, 512, 512, 512, 512, 512, 512, 499, 482, 482, 485, 492, 498, 494, 493, 495, 497, 496, 493, 490, 486, 486, 488, 486, 486, 492, 492, 490, 491, 497, 494, 494, 494, 490, 489, 486, 488, 483, 486, 491, 489, 493, 495, 497, 494, 493, 489, 486, 486, 485, 486, 488, 492, 492, 490, 491, 498, 493, 498, 494, 491, 491, 490, 487, 488, 491, 495, 493, 495, 495, 500, 492, 494, 491, 490, 487, 497, 500, 502, 500, 500, 499, 497, 500, 499, 495, 490, 487, 488, 487, 494, 499, 497, 493, 497, 495, 498, 492, 495, 496, 493, 496, 495, 494, 498, 499, 500, 497, 494, 485, 483, 483, 485, 483, 482, 470, 475, 481, 484, 483, 479, 477, 482, 472, 464, 464, 452, 454, 450, 443, 446, 449, 460, 456, 459, 464, 462, 464, 455, 449, 436, 430, 430, 439, 439, 438, 444, 442, 447, 449, 446, 447, 434, 436, 422, 425, 429, 439, 442, 443, 432, 439, 439, 447, 438, 430, 428, 416, 429, 425, 432, 432, 440, 442, 447, 449, 444, 441, 430, 426, 428, 428, 430, 434, 437, 445, 444, 441, 434, 440, 440, 441, 418, 415, 419, 432, 436, 439, 443, 443, 441, 434, 425, 426, 426, 425, 434, 427, 433, 435, 436, 443, 445, 453, 436, 427, 417, 438, 431, 431, 434, 433, 427, 427, 443, 448, 441, 436, 432, 429, 429, 429, 429, 430, 430, 438, 448, 437, 443, 443, 442, 432, 423, 420, 423, 420, 440, 446, 458, 443, 441, 425, 434, 423, 424, 433, 439, 440, 434, 445, 439, 442, 421, 428, 436, 422, 422, 432, 442, 449, 438, 440, 446, 426, 421, 427, 427, 424, 437, 431, 431, 437, 439, 439, 433, 433, 444, 427, 421, 434, 438, 443, 442, 432, 432, 439, 430, 428, 428, 430, 436, 443, 442, 429, 419, 423, 434, 445, 440, 431, 427, 423, 425, 429, 441, 429, 418, 436, 435, 426, 436, 447, 428, 436, 441, 441, 430, 426, 430, 435, 438, 444, 425, 417, 422, 437, 437, 443, 447, 439, 434, 426, 432, 437, 432, 417, 423, 416],
    'fsort': [512, 512, 512, 512, 512, 512, 512, 512, 512, 499, 477, 471, 486, 490, 491, 496, 496, 493, 497, 499, 498, 495, 488, 482, 481, 487, 489, 491, 485, 483, 488, 491, 494, 492, 491, 490, 491, 491, 490, 488, 491, 488, 488, 488, 494, 494, 489, 484, 482, 469, 454, 450, 444, 444, 444, 444, 444, 444, 444, 444, 444, 442, 442, 442, 441, 441, 441, 440, 440, 440, 440, 440, 440, 439, 438, 438, 438, 438, 438, 438, 438, 438, 437, 437, 436, 436, 436, 435, 435, 434, 434, 433, 431, 429, 427, 425, 423, 421, 418, 416, 414, 410, 408, 407, 404, 403, 402, 399, 395, 394, 386, 380, 373, 360, 351, 341, 332, 325, 311, 301, 299, 287, 277, 272, 268, 258, 245, 239, 231, 228, 222, 218, 215, 211, 204, 202, 197, 195, 191, 188, 187, 185, 181, 175, 173, 170, 168, 167, 164, 164, 164, 163, 162, 160, 158, 152, 152, 147, 145, 145, 142, 141, 138, 138, 137, 136, 136, 134, 134, 134, 134, 134, 134, 134, 131, 130, 129, 128, 126, 125, 125, 125, 125, 124, 123, 122, 122, 122, 122, 122, 122, 121, 121, 121, 121, 121, 119, 119, 119, 119, 119, 118, 118, 117, 116, 116, 116, 113, 113, 113, 112, 112, 112, 109, 109, 109, 109, 108, 107, 107, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 101, 101, 101, 101, 101, 101, 100, 100, 99, 99, 99, 99, 99, 99, 99, 99, 99, 98, 98, 98, 98, 98, 98, 98, 97, 97, 96, 95, 95, 95, 95, 95, 95, 95, 95, 94, 94, 94, 93, 92, 92, 91, 91, 91, 90, 90, 90, 90, 90, 90, 90, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 88, 88, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87],
}

plt.figure(figsize=(5, 1.8))
plt.ylim(0, 1)
plt.xlim(0, 350)
plt.plot(1 - 1/512*np.array(data['fsort']), label='FSPool')
plt.plot(1 - 1/512*np.array(data['sum']), label='Sum')
plt.plot(1 - 1/512*np.array(data['rn']), label='RN')
plt.legend()
plt.xlabel('Training epoch')
plt.ylabel('Sparsity ratio')
plt.savefig('sparsity.pdf', bbox_inches='tight')
